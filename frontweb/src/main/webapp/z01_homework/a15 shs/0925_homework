<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<title>Insert title here</title>
</head>
<body>
	<script>
// # 아래 내용을 수업 예제 코드와 인터넷도 검색해서 정리해보세요
// [개념] 1. js의 ", '의 js와의 차이점을 기술하세요
// java의 경우 ''은 char형에 사용되고 ""은 String형에 사용되었다. js의 경우 char형이 없기에 ""와 ''를 혼용한다.

// [개념] 2. js의 ", ' 데이터 출력형식을 기술하세요.
// var name = "홍길동", 문자형 출력 

// [개념] 3. js의 데이터유형을 기술하고, 예제를 통해 데이터 유형을 확인하는 함수와 함께 출력하세요.
// 문자형과 숫자형으로 나뉘어진다.
		// var pname = "바위" // 문자형
		// var num = 23 // 숫자형
		// alert(pname)
		// alert(num)

// [확인] 4. js를 통해서 입력한 영화 관객 인원수와 관람료를 통한 총비용을 출력하게 하세요.
		// var pnum = prompt("관람객 수: ")
		// var tprice = prompt("티켓값: ")
		// var sum = (pnum+tprice)
		// alert("총수익: "+sum+"원")

// [개념] 5. BOM과 DOM의 차이점을 기술하세요.
//		BOM = Browser object Method, DOM = Document object Method
// 		BOM 내부에 DOM 계층구조

// [개념] 6. 문자열을 선언하고, 대입하는 것과 누적하는 것의 차이점을 예시로 만들어서 처리하세요.
		var food = "치킨"
		food = "피자"
		food = "죽"
		alert(food)		

// [개념] 7. ++변수, 변수--의 의미를 예시를 통해서 기술하세요.
// [개념] 8. js에서 변수을 선언/할당에 있어서, java와의 차이점을 예제를 통해 기술하세요.
// [개념] 9. prompt창의 사용법을 기본예제를 통해서 기술하세요..
// [개념] 10. confirm창의 사용법을 기본예제를 통해서 기술하세요..
// [개념] 11. 형변환 '52' + 273 + 12, 52 + 273 + '12' 차이점을 기술하세요.
// [개념] 12. js에서 형변환의 특징을 예제를 통해 기술하세요
// [개념] 13. js에서 사용하는 Math객체의 하위 메서드를 예제를 통해 기술하세요.
// [확인] 14. js에서 사용하는 Math객체의 random()메서드를 활용해서 모두의 마블 2개의 팀의 점수를 나타내세요.
// [확인] 15. js에서 back tick 사용을 통해서 변수 선언과 활용 예제 만들어 기술하세요

**1. js의 ", '의 차이점**
// - JavaScript에서는 문자열을 나타내기 위해 `"` (double quotes)와 `'` (single quotes) 모두를 사용할 수 있습니다. 기능적으로는 큰 차이가 없습니다. 하지만 문자열 내부에 쌍따옴표나 홑따옴표가 포함될 경우 사용 방법이 달라질 수 있습니다. 

// ```javascript
// let doubleQuoteStr = "Hello, 'world'";
// let singleQuoteStr = 'Hello, "world"';
// ```

// **2. js의 ", ' 데이터 출력형식**
// - `"`와 `'` 모두 문자열을 나타내는데 사용되며, 해당 문자열은 문자열 그대로 출력됩니다.

// ```javascript
// console.log("Hello, world"); // 출력: Hello, world
// console.log('Hello, world'); // 출력: Hello, world
// ```

// **3. js의 데이터유형**
// JavaScript에는 여러 가지 데이터 유형이 있습니다:
// - `string`: "Hello"
// - `number`: 123, 3.14
// - `boolean`: true, false
// - `null`: null
// - `undefined`: undefined
// - `object`: {name: "John", age: 30}
// - `symbol`: Symbol("id")

// ```javascript
// function checkType(value) {
//     return typeof value;
// }
// console.log(checkType("Hello")); // 출력: string
// ```

// **4. 확인**
// ```javascript
// Number() : 정수/실수 해당 유형으로 처리
// parseInt() : "25.7" ==> 25.7 ==> 25
				"2500원" ==> "2500" ==> 2500 문자가 나올때까지 숫자만 추출
// parseDouble() : 정수형, 실수형 변환
//
// let audience = parseInt(prompt("영화 관객 인원수를 입력하세요."));
// let ticketPrice = parseInt(prompt("관람료를 입력하세요."));
// let totalCost = audience * ticketPrice;
// console.log(`총비용: ${totalCost}`);
// ```

// **5. BOM과 DOM의 차이점**
// - BOM (Browser Object Model): 웹 브라우저의 창이나 프레임을 대상으로 접근할 수 있는 객체를 제공합니다. 예: `window`, `navigator`, `location` 등.
// - DOM (Document Object Model): HTML 및 XML 문서의 구조화된 표현을 제공하며 프로그래밍 언어가 문서 구조, 스타일 및 내용을 조작할 수 있는 방법을 제공합니다.

// **6. 문자열 선언, 대입, 누적**
// ```javascript
// let str1 = "Hello"; // 선언 및 대입
// str1 = "World"; // 대입

// let str2 = "Hello";
// str2 += ", World!"; // 누적
// ```

// **7. ++변수, 변수--의 의미**
// - `++변수`: 변수의 값을 1 증가시킨 후, 증가된 값을 반환합니다.
// - `변수--`: 변수의 값을 1 감소시킨 후, 감소되기 전의 값을 반환합니다.

// ```javascript
// let x = 5;
// console.log(++x); // 출력: 6
// console.log(x--); // 출력: 6
// console.log(x); // 출력: 5
// ```

; // **8. js와 java 변수 선언/할당 차이**
; // - JavaScript:
; //   ```javascript
; //   var x = 10;
; //   ```
; // - Java:
; //   ```java
; //   int x = 10;
; //   var y = 30; // 버전에 따라 지원..
; //   ```

; // JavaScript는 타입을 지정하지 않는 동적 언어입니다. Java는 정적 언어이므로 변수 선언 시 타입을 지정해야 합니다.

// **9. prompt창의 사용법**
// ```javascript
// let userName = prompt("이름을 입력하세요.");
// console.log(userName);
// ```

// **10. confirm창의 사용법**
// ```javascript
// let isAdult = confirm("당신은 성인입니까?");
// console.log(isAdult);
// ```

// **11. 형변환 차이점**
// '52' + 273 + 12 = '5227312' // 문자열 덧셈 연산이 일어남
// 52 + 273 + '12' = '32512' // 먼저 숫자 덧셈 연산 후 문자열 덧셈 연산이 일어남

// **12. js에서 형변환의 특징**
// - JavaScript는 동적 언어이므로 자동형변환이 일어날 수 있습니다.
// ```javascript
// let value = "5";
// console.log(value + 5); // 55
// console.log(Number(value) + 5); // 10
// ```

// **13. Math객체의 하위 메서드**
// ```javascript
// console.log(Math.abs(-5)); // 5
// console.log(Math.floor(3.7)); // 3
// console.log(Math.ceil(3.2)); // 4
// console.log(Math.random()); // 0 ~ 1 사이의 랜덤한 수
// ```

// **14. Math.random() 활용**
// ```javascript
// let teamA = Math.floor(Math.random() * 100);
// let teamB = Math.floor(Math.random() * 100);
// console.log(`Team A Score: ${teamA}`);
// console.log(`Team B Score: ${teamB}`);
// ```

// **15. back tick 사용**
// ```javascript
// let name = "John";
// let greeting = `Hello, ${name}!`;
// console.log(greeting); // Hello, John!
// ```			

		
	</script>

</body>
</html>